# h2xs
# Autogenerated from man page /usr/share/man/man1/h2xs.1.gz
complete -c h2xs -s A -l omit-autoload -d 'Omit all autoload facilities'
complete -c h2xs -s B -l beta-version -d 'Use an alpha/beta style version number.   Causes version number to be \\*(L"0'
complete -c h2xs -s C -l omit-changes -d 'Omits creation of the Changes file, and adds a \\s-1HISTORY\\s0 section to the …'
complete -c h2xs -s F -l cpp-flags -d 'Additional flags to specify to C preprocessor when scanning header for functi…'
complete -c h2xs -s M -l func-mask -d 'selects functions/macros to process'
complete -c h2xs -s O -l overwrite-ok -d 'Allows a pre-existing extension directory to be overwritten'
complete -c h2xs -s P -l omit-pod -d 'Omit the autogenerated stub \\s-1POD\\s0 section'
complete -c h2xs -s X -l omit-XS -d 'Omit the \\s-1XS\\s0 portion.  Used to generate a skeleton pure Perl module'
complete -c h2xs -s a -l gen-accessors -d 'Generate an accessor method for each element of structs and unions'
complete -c h2xs -s b -l compat-version -d 'Generates a '
complete -c h2xs -s c -l omit-constant -d 'Omit \\f(CW\\*(C`constant()\\*(C\' from the '
complete -c h2xs -s d -l debugging -d 'Turn on debugging messages'
complete -c h2xs -s e -l omit-enums -d 'If regular expression is not given, skip all constants that are defined in a …'
complete -c h2xs -s f -l force -d 'Allows an extension to be created for a header even if that header is not fou…'
complete -c h2xs -s g -l global -d 'Include code for safely storing static data in the . xs file'
complete -c h2xs -s h -s '?' -l help -d 'Print the usage, help and version for this h2xs and exit'
complete -c h2xs -s k -l omit-const-func -d 'For function arguments declared as \\f(CW\\*(C`const\\*(C\', omit the const attri…'
complete -c h2xs -s m -l gen-tied-var -d 'Experimental: for each variable declared in the header file(s), declare a per…'
complete -c h2xs -s n -l name -d 'Specifies a name to be used for the extension, e. g. , -nÂ RPC::DCE'
complete -c h2xs -s o -l opaque-re -d 'Use \\*(L"opaque\\*(R" data type for the C types matched by the regular express…'
complete -c h2xs -s p -l remove-prefix -d 'Specify a prefix which should be removed from the Perl function names, e. g'
complete -c h2xs -s s -l const-subs -d 'Create a perl subroutine for the specified macros rather than autoload with t…'
complete -c h2xs -s t -l default-type -d 'Specify the internal type that the constant() mechanism uses for macros'
complete -c h2xs -l use-new-tests -d 'When --compat-version (-b) is present the generated tests will use \\f(CW\\*(C`…'
complete -c h2xs -l use-old-tests -d 'Will force the generation of test code that uses the older \\f(CW\\*(C`Test\\*(C…'
complete -c h2xs -l skip-exporter -d 'Do not use \\f(CW\\*(C`Exporter\\*(C\' and/or export any symbol'
complete -c h2xs -l skip-ppport -d 'Do not use \\f(CW\\*(C`Devel::PPPort\\*(C\': no portability to older version'
complete -c h2xs -l skip-autoloader -d 'Do not use the module \\f(CW\\*(C`AutoLoader\\*(C\'; but keep the constant() func…'
complete -c h2xs -l skip-strict -d 'Do not use the pragma \\f(CW\\*(C`strict\\*(C\''
complete -c h2xs -l skip-warnings -d 'Do not use the pragma \\f(CW\\*(C`warnings\\*(C\''
complete -c h2xs -s v -l version -d 'Specify a version number for this extension'

